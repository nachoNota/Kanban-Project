@using tl2_proyecto_2024_nachoNota.ViewModels.UsuarioVM
@model List<EditarUsuarioViewModel>


<div class="container-fluid">
	<div class="row">
		<!-- Aside -->
		<div class="col-md-3">
			@await Html.PartialAsync("_Aside")
		</div>

		<!-- Contenido principal -->
		<div class="col-md-9 p-4" style="max-width:40rem">
			<h2>Editar usuarios</h2>
			<p class="text-muted mb-4" style="max-width: 30rem">
				Busca un usuario por su nombre para ver su información. Desde aquí puedes cambiar su rol o eliminarlo del sistema.
			</p>

			<p class="text-danger">@TempData["Error"]</p>

			<form asp-action="Buscar" asp-controller="Usuario" class="d-flex mb-2" role="search" style="max-width:30rem">
				<input class="form-control me-2" type="search" name="nombreUsuario" placeholder="Busca por nombre de usuario" aria-label="Search" />
				<button class="btn btn-outline-success" type="submit">Search</button>
			</form>

			<div class="accordion accordion-flush" id="accordionFlushExample">
				@if (Model.Count > 0)
				{
					@foreach (var usuario in Model)
					{
						<div class="accordion-item">
							<h2 class="accordion-header">
								<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapse-@usuario.Id" aria-expanded="false" aria-controls="flush-collapse-@usuario.Id">
									@usuario.Nombre
								</button>
							</h2>
							<div id="flush-collapse-@usuario.Id" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
								<div class="accordion-body d-flex justify-content-between align-items-center">
									<div class="me-3" style="flex: 1;">
										<p><strong>Email:</strong> @usuario.Email</p>
										<p><strong>Rol:</strong> @usuario.Rol.ToString()</p>
									</div>
									<div class="d-flex gap-2">
										<a asp-action="CambiarRol" asp-route-idUsuario="@usuario.Id" class="btn btn-outline-success"
										   data-bs-toggle="tooltip" data-bs-placement="bottom" title="Asigna o cambia de rol a un usuario"><i class="bi bi-gear"></i></a>
										<!-- boton eliminar -->
										<button class="btn btn-outline-danger"
												data-bs-toggle="modal"
												data-bs-target="#modalEliminar-@usuario.Id">
											<i class="bi bi-trash"></i>
										</button>
									</div>
								</div>
							</div>
						</div>
						@await Html.PartialAsync("EliminarParaAdmin", new ConfirmarEliminarUsuarioViewModel(usuario.Id, usuario.Nombre));
					}
				}
			</div>

		</div>
	</div>
</div>

@if (TempData["Mensaje"] != null)
{
	<div class="toast-container position-fixed top-0 end-0 p-3">
		<div class="toast show align-items-center text-bg-primary" role="alert" aria-live="assertive" aria-atomic="true">
			<div class="d-flex">
				<div class="toast-body">
					@TempData["Mensaje"]
				</div>
				<button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
		</div>
	</div>
}